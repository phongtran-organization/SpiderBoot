// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.

#include "SpiderAgentAPI.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_2;



SpiderDownloadApp::SpiderFootSide_ptr SpiderDownloadApp::SpiderFootSide_Helper::_nil() {
  return ::SpiderDownloadApp::SpiderFootSide::_nil();
}

::CORBA::Boolean SpiderDownloadApp::SpiderFootSide_Helper::is_nil(::SpiderDownloadApp::SpiderFootSide_ptr p) {
  return ::CORBA::is_nil(p);

}

void SpiderDownloadApp::SpiderFootSide_Helper::release(::SpiderDownloadApp::SpiderFootSide_ptr p) {
  ::CORBA::release(p);
}

void SpiderDownloadApp::SpiderFootSide_Helper::marshalObjRef(::SpiderDownloadApp::SpiderFootSide_ptr obj, cdrStream& s) {
  ::SpiderDownloadApp::SpiderFootSide::_marshalObjRef(obj, s);
}

SpiderDownloadApp::SpiderFootSide_ptr SpiderDownloadApp::SpiderFootSide_Helper::unmarshalObjRef(cdrStream& s) {
  return ::SpiderDownloadApp::SpiderFootSide::_unmarshalObjRef(s);
}

void SpiderDownloadApp::SpiderFootSide_Helper::duplicate(::SpiderDownloadApp::SpiderFootSide_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

SpiderDownloadApp::SpiderFootSide_ptr
SpiderDownloadApp::SpiderFootSide::_duplicate(::SpiderDownloadApp::SpiderFootSide_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

SpiderDownloadApp::SpiderFootSide_ptr
SpiderDownloadApp::SpiderFootSide::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


SpiderDownloadApp::SpiderFootSide_ptr
SpiderDownloadApp::SpiderFootSide::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

SpiderDownloadApp::SpiderFootSide_ptr
SpiderDownloadApp::SpiderFootSide::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_SpiderFootSide _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_SpiderFootSide* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_SpiderFootSide;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* SpiderDownloadApp::SpiderFootSide::_PD_repoId = "IDL:SpiderDownloadApp/SpiderFootSide:1.0";


SpiderDownloadApp::_objref_SpiderFootSide::~_objref_SpiderFootSide() {
  
}


SpiderDownloadApp::_objref_SpiderFootSide::_objref_SpiderFootSide(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::SpiderDownloadApp::SpiderFootSide::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
SpiderDownloadApp::_objref_SpiderFootSide::_ptrToObjRef(const char* id)
{
  if (id == ::SpiderDownloadApp::SpiderFootSide::_PD_repoId)
    return (::SpiderDownloadApp::SpiderFootSide_ptr) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::SpiderDownloadApp::SpiderFootSide::_PD_repoId))
    return (::SpiderDownloadApp::SpiderFootSide_ptr) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for SpiderDownloadApp::SpiderFootSide::createMappingChannel

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_clong_i_cstring_i_cstring_i_cstring_i_clong
class _0RL_cd_61f5032497954561_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_61f5032497954561_00000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::String_var arg_1_;
  const char* arg_1;
  ::CORBA::String_var arg_2_;
  const char* arg_2;
  ::CORBA::String_var arg_3_;
  const char* arg_3;
  ::CORBA::Long arg_4;
  ::CORBA::Boolean result;
};

void _0RL_cd_61f5032497954561_00000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  _n.marshalString(arg_1,0);
  _n.marshalString(arg_2,0);
  _n.marshalString(arg_3,0);
  arg_4 >>= _n;

}

void _0RL_cd_61f5032497954561_00000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  arg_1_ = _n.unmarshalString(0);
  arg_1 = arg_1_.in();
  arg_2_ = _n.unmarshalString(0);
  arg_2 = arg_2_.in();
  arg_3_ = _n.unmarshalString(0);
  arg_3 = arg_3_.in();
  (::CORBA::Long&)arg_4 <<= _n;

}

void _0RL_cd_61f5032497954561_00000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_61f5032497954561_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_61f5032497954561_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_61f5032497954561_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_61f5032497954561_00000000* tcd = (_0RL_cd_61f5032497954561_00000000*)cd;
  SpiderDownloadApp::_impl_SpiderFootSide* impl = (SpiderDownloadApp::_impl_SpiderFootSide*) svnt->_ptrToInterface(SpiderDownloadApp::SpiderFootSide::_PD_repoId);
  tcd->result = impl->createMappingChannel(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4);


}

::CORBA::Boolean SpiderDownloadApp::_objref_SpiderFootSide::createMappingChannel(::CORBA::Long timerId, const char* cHomeId, const char* cMonitorId, const char* downloadClusterId, ::CORBA::Long timerInterval)
{
  _0RL_cd_61f5032497954561_00000000 _call_desc(_0RL_lcfn_61f5032497954561_10000000, "createMappingChannel", 21);
  _call_desc.arg_0 = timerId;
  _call_desc.arg_1 = cHomeId;
  _call_desc.arg_2 = cMonitorId;
  _call_desc.arg_3 = downloadClusterId;
  _call_desc.arg_4 = timerInterval;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderDownloadApp::SpiderFootSide::modifyMappingChannel

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_clong_i_cstring_i_cstring_i_cstring_i_clong_i_clong
class _0RL_cd_61f5032497954561_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_61f5032497954561_20000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::String_var arg_1_;
  const char* arg_1;
  ::CORBA::String_var arg_2_;
  const char* arg_2;
  ::CORBA::String_var arg_3_;
  const char* arg_3;
  ::CORBA::Long arg_4;
  ::CORBA::Long arg_5;
  ::CORBA::Boolean result;
};

void _0RL_cd_61f5032497954561_20000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  _n.marshalString(arg_1,0);
  _n.marshalString(arg_2,0);
  _n.marshalString(arg_3,0);
  arg_4 >>= _n;
  arg_5 >>= _n;

}

void _0RL_cd_61f5032497954561_20000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  arg_1_ = _n.unmarshalString(0);
  arg_1 = arg_1_.in();
  arg_2_ = _n.unmarshalString(0);
  arg_2 = arg_2_.in();
  arg_3_ = _n.unmarshalString(0);
  arg_3 = arg_3_.in();
  (::CORBA::Long&)arg_4 <<= _n;
  (::CORBA::Long&)arg_5 <<= _n;

}

void _0RL_cd_61f5032497954561_20000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_61f5032497954561_20000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_61f5032497954561_20000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_61f5032497954561_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_61f5032497954561_20000000* tcd = (_0RL_cd_61f5032497954561_20000000*)cd;
  SpiderDownloadApp::_impl_SpiderFootSide* impl = (SpiderDownloadApp::_impl_SpiderFootSide*) svnt->_ptrToInterface(SpiderDownloadApp::SpiderFootSide::_PD_repoId);
  tcd->result = impl->modifyMappingChannel(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5);


}

::CORBA::Boolean SpiderDownloadApp::_objref_SpiderFootSide::modifyMappingChannel(::CORBA::Long timerId, const char* cHomeId, const char* cMonitorId, const char* downloadClusterId, ::CORBA::Long timerInterval, ::CORBA::Long synStatus)
{
  _0RL_cd_61f5032497954561_20000000 _call_desc(_0RL_lcfn_61f5032497954561_30000000, "modifyMappingChannel", 21);
  _call_desc.arg_0 = timerId;
  _call_desc.arg_1 = cHomeId;
  _call_desc.arg_2 = cMonitorId;
  _call_desc.arg_3 = downloadClusterId;
  _call_desc.arg_4 = timerInterval;
  _call_desc.arg_5 = synStatus;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderDownloadApp::SpiderFootSide::deleteMappingChannel

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_clong_i_cstring
class _0RL_cd_61f5032497954561_40000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_61f5032497954561_40000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::String_var arg_1_;
  const char* arg_1;
  ::CORBA::Boolean result;
};

void _0RL_cd_61f5032497954561_40000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  _n.marshalString(arg_1,0);

}

void _0RL_cd_61f5032497954561_40000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  arg_1_ = _n.unmarshalString(0);
  arg_1 = arg_1_.in();

}

void _0RL_cd_61f5032497954561_40000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_61f5032497954561_40000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_61f5032497954561_40000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_61f5032497954561_50000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_61f5032497954561_40000000* tcd = (_0RL_cd_61f5032497954561_40000000*)cd;
  SpiderDownloadApp::_impl_SpiderFootSide* impl = (SpiderDownloadApp::_impl_SpiderFootSide*) svnt->_ptrToInterface(SpiderDownloadApp::SpiderFootSide::_PD_repoId);
  tcd->result = impl->deleteMappingChannel(tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean SpiderDownloadApp::_objref_SpiderFootSide::deleteMappingChannel(::CORBA::Long timerId, const char* downloadClusterId)
{
  _0RL_cd_61f5032497954561_40000000 _call_desc(_0RL_lcfn_61f5032497954561_50000000, "deleteMappingChannel", 21);
  _call_desc.arg_0 = timerId;
  _call_desc.arg_1 = downloadClusterId;

  _invoke(_call_desc);
  return _call_desc.result;


}

SpiderDownloadApp::_pof_SpiderFootSide::~_pof_SpiderFootSide() {}


omniObjRef*
SpiderDownloadApp::_pof_SpiderFootSide::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::SpiderDownloadApp::_objref_SpiderFootSide(ior, id);
}


::CORBA::Boolean
SpiderDownloadApp::_pof_SpiderFootSide::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::SpiderDownloadApp::SpiderFootSide::_PD_repoId))
    return 1;
  
  return 0;
}

const SpiderDownloadApp::_pof_SpiderFootSide _the_pof_SpiderDownloadApp_mSpiderFootSide;

SpiderDownloadApp::_impl_SpiderFootSide::~_impl_SpiderFootSide() {}


::CORBA::Boolean
SpiderDownloadApp::_impl_SpiderFootSide::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "createMappingChannel")) {

    _0RL_cd_61f5032497954561_00000000 _call_desc(_0RL_lcfn_61f5032497954561_10000000, "createMappingChannel", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "modifyMappingChannel")) {

    _0RL_cd_61f5032497954561_20000000 _call_desc(_0RL_lcfn_61f5032497954561_30000000, "modifyMappingChannel", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "deleteMappingChannel")) {

    _0RL_cd_61f5032497954561_40000000 _call_desc(_0RL_lcfn_61f5032497954561_50000000, "deleteMappingChannel", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
SpiderDownloadApp::_impl_SpiderFootSide::_ptrToInterface(const char* id)
{
  if (id == ::SpiderDownloadApp::SpiderFootSide::_PD_repoId)
    return (::SpiderDownloadApp::_impl_SpiderFootSide*) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::SpiderDownloadApp::SpiderFootSide::_PD_repoId))
    return (::SpiderDownloadApp::_impl_SpiderFootSide*) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
SpiderDownloadApp::_impl_SpiderFootSide::_mostDerivedRepoId()
{
  return ::SpiderDownloadApp::SpiderFootSide::_PD_repoId;
}

void
SpiderRenderApp::SpiderFootSide::RenderInfo::operator>>= (cdrStream &_n) const
{
  jobId >>= _n;
  _n.marshalString(videoId,0);
  _n.marshalString(vIntro,0);
  _n.marshalString(vOutro,0);
  _n.marshalString(vLogo,0);
  _n.marshalString(vdownloadPath,0);

}

void
SpiderRenderApp::SpiderFootSide::RenderInfo::operator<<= (cdrStream &_n)
{
  (::CORBA::Long&)jobId <<= _n;
  videoId = _n.unmarshalString(0);
  vIntro = _n.unmarshalString(0);
  vOutro = _n.unmarshalString(0);
  vLogo = _n.unmarshalString(0);
  vdownloadPath = _n.unmarshalString(0);

}

SpiderRenderApp::SpiderFootSide_ptr SpiderRenderApp::SpiderFootSide_Helper::_nil() {
  return ::SpiderRenderApp::SpiderFootSide::_nil();
}

::CORBA::Boolean SpiderRenderApp::SpiderFootSide_Helper::is_nil(::SpiderRenderApp::SpiderFootSide_ptr p) {
  return ::CORBA::is_nil(p);

}

void SpiderRenderApp::SpiderFootSide_Helper::release(::SpiderRenderApp::SpiderFootSide_ptr p) {
  ::CORBA::release(p);
}

void SpiderRenderApp::SpiderFootSide_Helper::marshalObjRef(::SpiderRenderApp::SpiderFootSide_ptr obj, cdrStream& s) {
  ::SpiderRenderApp::SpiderFootSide::_marshalObjRef(obj, s);
}

SpiderRenderApp::SpiderFootSide_ptr SpiderRenderApp::SpiderFootSide_Helper::unmarshalObjRef(cdrStream& s) {
  return ::SpiderRenderApp::SpiderFootSide::_unmarshalObjRef(s);
}

void SpiderRenderApp::SpiderFootSide_Helper::duplicate(::SpiderRenderApp::SpiderFootSide_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

SpiderRenderApp::SpiderFootSide_ptr
SpiderRenderApp::SpiderFootSide::_duplicate(::SpiderRenderApp::SpiderFootSide_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

SpiderRenderApp::SpiderFootSide_ptr
SpiderRenderApp::SpiderFootSide::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


SpiderRenderApp::SpiderFootSide_ptr
SpiderRenderApp::SpiderFootSide::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

SpiderRenderApp::SpiderFootSide_ptr
SpiderRenderApp::SpiderFootSide::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_SpiderFootSide _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_SpiderFootSide* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_SpiderFootSide;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* SpiderRenderApp::SpiderFootSide::_PD_repoId = "IDL:SpiderRenderApp/SpiderFootSide:1.0";


SpiderRenderApp::_objref_SpiderFootSide::~_objref_SpiderFootSide() {
  
}


SpiderRenderApp::_objref_SpiderFootSide::_objref_SpiderFootSide(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::SpiderRenderApp::SpiderFootSide::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
SpiderRenderApp::_objref_SpiderFootSide::_ptrToObjRef(const char* id)
{
  if (id == ::SpiderRenderApp::SpiderFootSide::_PD_repoId)
    return (::SpiderRenderApp::SpiderFootSide_ptr) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::SpiderRenderApp::SpiderFootSide::_PD_repoId))
    return (::SpiderRenderApp::SpiderFootSide_ptr) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for SpiderRenderApp::SpiderFootSide::createRenderJob

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_clong_i_cSpiderRenderApp_mSpiderFootSide_mRenderInfo
class _0RL_cd_61f5032497954561_60000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_61f5032497954561_60000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  SpiderRenderApp::SpiderFootSide::RenderInfo_var arg_1_;
  const SpiderRenderApp::SpiderFootSide::RenderInfo* arg_1;
  ::CORBA::Boolean result;
};

void _0RL_cd_61f5032497954561_60000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  (const SpiderRenderApp::SpiderFootSide::RenderInfo&) *arg_1 >>= _n;

}

void _0RL_cd_61f5032497954561_60000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  arg_1_ = new SpiderRenderApp::SpiderFootSide::RenderInfo;
  (SpiderRenderApp::SpiderFootSide::RenderInfo&)arg_1_ <<= _n;
  arg_1 = &arg_1_.in();

}

void _0RL_cd_61f5032497954561_60000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_61f5032497954561_60000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_61f5032497954561_60000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_61f5032497954561_70000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_61f5032497954561_60000000* tcd = (_0RL_cd_61f5032497954561_60000000*)cd;
  SpiderRenderApp::_impl_SpiderFootSide* impl = (SpiderRenderApp::_impl_SpiderFootSide*) svnt->_ptrToInterface(SpiderRenderApp::SpiderFootSide::_PD_repoId);
  tcd->result = impl->createRenderJob(tcd->arg_0, *tcd->arg_1);


}

::CORBA::Boolean SpiderRenderApp::_objref_SpiderFootSide::createRenderJob(::CORBA::Long jobId, const ::SpiderRenderApp::SpiderFootSide::RenderInfo& vInfo)
{
  _0RL_cd_61f5032497954561_60000000 _call_desc(_0RL_lcfn_61f5032497954561_70000000, "createRenderJob", 16);
  _call_desc.arg_0 = jobId;
  _call_desc.arg_1 = &(::SpiderRenderApp::SpiderFootSide::RenderInfo&) vInfo;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderRenderApp::SpiderFootSide::modifyRenderJob

// Local call call-back function.
static void
_0RL_lcfn_61f5032497954561_80000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_61f5032497954561_60000000* tcd = (_0RL_cd_61f5032497954561_60000000*)cd;
  SpiderRenderApp::_impl_SpiderFootSide* impl = (SpiderRenderApp::_impl_SpiderFootSide*) svnt->_ptrToInterface(SpiderRenderApp::SpiderFootSide::_PD_repoId);
  tcd->result = impl->modifyRenderJob(tcd->arg_0, *tcd->arg_1);


}

::CORBA::Boolean SpiderRenderApp::_objref_SpiderFootSide::modifyRenderJob(::CORBA::Long jobId, const ::SpiderRenderApp::SpiderFootSide::RenderInfo& vInfo)
{
  _0RL_cd_61f5032497954561_60000000 _call_desc(_0RL_lcfn_61f5032497954561_80000000, "modifyRenderJob", 16);
  _call_desc.arg_0 = jobId;
  _call_desc.arg_1 = &(::SpiderRenderApp::SpiderFootSide::RenderInfo&) vInfo;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderRenderApp::SpiderFootSide::deleteRenderJob

// Local call call-back function.
static void
_0RL_lcfn_61f5032497954561_90000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_61f5032497954561_60000000* tcd = (_0RL_cd_61f5032497954561_60000000*)cd;
  SpiderRenderApp::_impl_SpiderFootSide* impl = (SpiderRenderApp::_impl_SpiderFootSide*) svnt->_ptrToInterface(SpiderRenderApp::SpiderFootSide::_PD_repoId);
  tcd->result = impl->deleteRenderJob(tcd->arg_0, *tcd->arg_1);


}

::CORBA::Boolean SpiderRenderApp::_objref_SpiderFootSide::deleteRenderJob(::CORBA::Long jobId, const ::SpiderRenderApp::SpiderFootSide::RenderInfo& vInfo)
{
  _0RL_cd_61f5032497954561_60000000 _call_desc(_0RL_lcfn_61f5032497954561_90000000, "deleteRenderJob", 16);
  _call_desc.arg_0 = jobId;
  _call_desc.arg_1 = &(::SpiderRenderApp::SpiderFootSide::RenderInfo&) vInfo;

  _invoke(_call_desc);
  return _call_desc.result;


}

SpiderRenderApp::_pof_SpiderFootSide::~_pof_SpiderFootSide() {}


omniObjRef*
SpiderRenderApp::_pof_SpiderFootSide::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::SpiderRenderApp::_objref_SpiderFootSide(ior, id);
}


::CORBA::Boolean
SpiderRenderApp::_pof_SpiderFootSide::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::SpiderRenderApp::SpiderFootSide::_PD_repoId))
    return 1;
  
  return 0;
}

const SpiderRenderApp::_pof_SpiderFootSide _the_pof_SpiderRenderApp_mSpiderFootSide;

SpiderRenderApp::_impl_SpiderFootSide::~_impl_SpiderFootSide() {}


::CORBA::Boolean
SpiderRenderApp::_impl_SpiderFootSide::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "createRenderJob")) {

    _0RL_cd_61f5032497954561_60000000 _call_desc(_0RL_lcfn_61f5032497954561_70000000, "createRenderJob", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "modifyRenderJob")) {

    _0RL_cd_61f5032497954561_60000000 _call_desc(_0RL_lcfn_61f5032497954561_80000000, "modifyRenderJob", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "deleteRenderJob")) {

    _0RL_cd_61f5032497954561_60000000 _call_desc(_0RL_lcfn_61f5032497954561_90000000, "deleteRenderJob", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
SpiderRenderApp::_impl_SpiderFootSide::_ptrToInterface(const char* id)
{
  if (id == ::SpiderRenderApp::SpiderFootSide::_PD_repoId)
    return (::SpiderRenderApp::_impl_SpiderFootSide*) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::SpiderRenderApp::SpiderFootSide::_PD_repoId))
    return (::SpiderRenderApp::_impl_SpiderFootSide*) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
SpiderRenderApp::_impl_SpiderFootSide::_mostDerivedRepoId()
{
  return ::SpiderRenderApp::SpiderFootSide::_PD_repoId;
}

SpiderUploadApp::SpiderFootSide_ptr SpiderUploadApp::SpiderFootSide_Helper::_nil() {
  return ::SpiderUploadApp::SpiderFootSide::_nil();
}

::CORBA::Boolean SpiderUploadApp::SpiderFootSide_Helper::is_nil(::SpiderUploadApp::SpiderFootSide_ptr p) {
  return ::CORBA::is_nil(p);

}

void SpiderUploadApp::SpiderFootSide_Helper::release(::SpiderUploadApp::SpiderFootSide_ptr p) {
  ::CORBA::release(p);
}

void SpiderUploadApp::SpiderFootSide_Helper::marshalObjRef(::SpiderUploadApp::SpiderFootSide_ptr obj, cdrStream& s) {
  ::SpiderUploadApp::SpiderFootSide::_marshalObjRef(obj, s);
}

SpiderUploadApp::SpiderFootSide_ptr SpiderUploadApp::SpiderFootSide_Helper::unmarshalObjRef(cdrStream& s) {
  return ::SpiderUploadApp::SpiderFootSide::_unmarshalObjRef(s);
}

void SpiderUploadApp::SpiderFootSide_Helper::duplicate(::SpiderUploadApp::SpiderFootSide_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

SpiderUploadApp::SpiderFootSide_ptr
SpiderUploadApp::SpiderFootSide::_duplicate(::SpiderUploadApp::SpiderFootSide_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

SpiderUploadApp::SpiderFootSide_ptr
SpiderUploadApp::SpiderFootSide::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


SpiderUploadApp::SpiderFootSide_ptr
SpiderUploadApp::SpiderFootSide::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

SpiderUploadApp::SpiderFootSide_ptr
SpiderUploadApp::SpiderFootSide::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_SpiderFootSide _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_SpiderFootSide* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_SpiderFootSide;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* SpiderUploadApp::SpiderFootSide::_PD_repoId = "IDL:SpiderUploadApp/SpiderFootSide:1.0";


SpiderUploadApp::_objref_SpiderFootSide::~_objref_SpiderFootSide() {
  
}


SpiderUploadApp::_objref_SpiderFootSide::_objref_SpiderFootSide(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::SpiderUploadApp::SpiderFootSide::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
SpiderUploadApp::_objref_SpiderFootSide::_ptrToObjRef(const char* id)
{
  if (id == ::SpiderUploadApp::SpiderFootSide::_PD_repoId)
    return (::SpiderUploadApp::SpiderFootSide_ptr) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::SpiderUploadApp::SpiderFootSide::_PD_repoId))
    return (::SpiderUploadApp::SpiderFootSide_ptr) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for SpiderUploadApp::SpiderFootSide::createUploadJob

// Local call call-back function.
static void
_0RL_lcfn_61f5032497954561_a0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_61f5032497954561_40000000* tcd = (_0RL_cd_61f5032497954561_40000000*)cd;
  SpiderUploadApp::_impl_SpiderFootSide* impl = (SpiderUploadApp::_impl_SpiderFootSide*) svnt->_ptrToInterface(SpiderUploadApp::SpiderFootSide::_PD_repoId);
  tcd->result = impl->createUploadJob(tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean SpiderUploadApp::_objref_SpiderFootSide::createUploadJob(::CORBA::Long timerId, const char* uploadClusterId)
{
  _0RL_cd_61f5032497954561_40000000 _call_desc(_0RL_lcfn_61f5032497954561_a0000000, "createUploadJob", 16);
  _call_desc.arg_0 = timerId;
  _call_desc.arg_1 = uploadClusterId;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderUploadApp::SpiderFootSide::modifyUploadJob

// Local call call-back function.
static void
_0RL_lcfn_61f5032497954561_b0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_61f5032497954561_40000000* tcd = (_0RL_cd_61f5032497954561_40000000*)cd;
  SpiderUploadApp::_impl_SpiderFootSide* impl = (SpiderUploadApp::_impl_SpiderFootSide*) svnt->_ptrToInterface(SpiderUploadApp::SpiderFootSide::_PD_repoId);
  tcd->result = impl->modifyUploadJob(tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean SpiderUploadApp::_objref_SpiderFootSide::modifyUploadJob(::CORBA::Long timerId, const char* uploadClusterId)
{
  _0RL_cd_61f5032497954561_40000000 _call_desc(_0RL_lcfn_61f5032497954561_b0000000, "modifyUploadJob", 16);
  _call_desc.arg_0 = timerId;
  _call_desc.arg_1 = uploadClusterId;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderUploadApp::SpiderFootSide::deleteUploadJob

// Local call call-back function.
static void
_0RL_lcfn_61f5032497954561_c0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_61f5032497954561_40000000* tcd = (_0RL_cd_61f5032497954561_40000000*)cd;
  SpiderUploadApp::_impl_SpiderFootSide* impl = (SpiderUploadApp::_impl_SpiderFootSide*) svnt->_ptrToInterface(SpiderUploadApp::SpiderFootSide::_PD_repoId);
  tcd->result = impl->deleteUploadJob(tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean SpiderUploadApp::_objref_SpiderFootSide::deleteUploadJob(::CORBA::Long timerId, const char* uploadClusterId)
{
  _0RL_cd_61f5032497954561_40000000 _call_desc(_0RL_lcfn_61f5032497954561_c0000000, "deleteUploadJob", 16);
  _call_desc.arg_0 = timerId;
  _call_desc.arg_1 = uploadClusterId;

  _invoke(_call_desc);
  return _call_desc.result;


}

SpiderUploadApp::_pof_SpiderFootSide::~_pof_SpiderFootSide() {}


omniObjRef*
SpiderUploadApp::_pof_SpiderFootSide::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::SpiderUploadApp::_objref_SpiderFootSide(ior, id);
}


::CORBA::Boolean
SpiderUploadApp::_pof_SpiderFootSide::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::SpiderUploadApp::SpiderFootSide::_PD_repoId))
    return 1;
  
  return 0;
}

const SpiderUploadApp::_pof_SpiderFootSide _the_pof_SpiderUploadApp_mSpiderFootSide;

SpiderUploadApp::_impl_SpiderFootSide::~_impl_SpiderFootSide() {}


::CORBA::Boolean
SpiderUploadApp::_impl_SpiderFootSide::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "createUploadJob")) {

    _0RL_cd_61f5032497954561_40000000 _call_desc(_0RL_lcfn_61f5032497954561_a0000000, "createUploadJob", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "modifyUploadJob")) {

    _0RL_cd_61f5032497954561_40000000 _call_desc(_0RL_lcfn_61f5032497954561_b0000000, "modifyUploadJob", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "deleteUploadJob")) {

    _0RL_cd_61f5032497954561_40000000 _call_desc(_0RL_lcfn_61f5032497954561_c0000000, "deleteUploadJob", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
SpiderUploadApp::_impl_SpiderFootSide::_ptrToInterface(const char* id)
{
  if (id == ::SpiderUploadApp::SpiderFootSide::_PD_repoId)
    return (::SpiderUploadApp::_impl_SpiderFootSide*) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::SpiderUploadApp::SpiderFootSide::_PD_repoId))
    return (::SpiderUploadApp::_impl_SpiderFootSide*) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
SpiderUploadApp::_impl_SpiderFootSide::_mostDerivedRepoId()
{
  return ::SpiderUploadApp::SpiderFootSide::_PD_repoId;
}

void
SpiderAgentApp::AgentSide::VideoInfo::operator>>= (cdrStream &_n) const
{
  _n.marshalString(videoId,0);
  _n.marshalString(title,0);
  _n.marshalString(tags,0);
  _n.marshalString(description,0);
  _n.marshalString(thumbnail,0);
  _n.marshalString(vDownloadPath,0);
  _n.marshalString(vRenderPath,0);
  _n.marshalString(homeChannelId,0);
  _n.marshalString(monitorChannelId,0);
  processStatus >>= _n;
  license >>= _n;

}

void
SpiderAgentApp::AgentSide::VideoInfo::operator<<= (cdrStream &_n)
{
  videoId = _n.unmarshalString(0);
  title = _n.unmarshalString(0);
  tags = _n.unmarshalString(0);
  description = _n.unmarshalString(0);
  thumbnail = _n.unmarshalString(0);
  vDownloadPath = _n.unmarshalString(0);
  vRenderPath = _n.unmarshalString(0);
  homeChannelId = _n.unmarshalString(0);
  monitorChannelId = _n.unmarshalString(0);
  (::CORBA::Long&)processStatus <<= _n;
  (::CORBA::Long&)license <<= _n;

}

SpiderAgentApp::AgentSide_ptr SpiderAgentApp::AgentSide_Helper::_nil() {
  return ::SpiderAgentApp::AgentSide::_nil();
}

::CORBA::Boolean SpiderAgentApp::AgentSide_Helper::is_nil(::SpiderAgentApp::AgentSide_ptr p) {
  return ::CORBA::is_nil(p);

}

void SpiderAgentApp::AgentSide_Helper::release(::SpiderAgentApp::AgentSide_ptr p) {
  ::CORBA::release(p);
}

void SpiderAgentApp::AgentSide_Helper::marshalObjRef(::SpiderAgentApp::AgentSide_ptr obj, cdrStream& s) {
  ::SpiderAgentApp::AgentSide::_marshalObjRef(obj, s);
}

SpiderAgentApp::AgentSide_ptr SpiderAgentApp::AgentSide_Helper::unmarshalObjRef(cdrStream& s) {
  return ::SpiderAgentApp::AgentSide::_unmarshalObjRef(s);
}

void SpiderAgentApp::AgentSide_Helper::duplicate(::SpiderAgentApp::AgentSide_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

SpiderAgentApp::AgentSide_ptr
SpiderAgentApp::AgentSide::_duplicate(::SpiderAgentApp::AgentSide_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

SpiderAgentApp::AgentSide_ptr
SpiderAgentApp::AgentSide::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


SpiderAgentApp::AgentSide_ptr
SpiderAgentApp::AgentSide::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

SpiderAgentApp::AgentSide_ptr
SpiderAgentApp::AgentSide::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_AgentSide _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_AgentSide* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_AgentSide;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* SpiderAgentApp::AgentSide::_PD_repoId = "IDL:SpiderAgentApp/AgentSide:1.0";


SpiderAgentApp::_objref_AgentSide::~_objref_AgentSide() {
  
}


SpiderAgentApp::_objref_AgentSide::_objref_AgentSide(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::SpiderAgentApp::AgentSide::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
SpiderAgentApp::_objref_AgentSide::_ptrToObjRef(const char* id)
{
  if (id == ::SpiderAgentApp::AgentSide::_PD_repoId)
    return (::SpiderAgentApp::AgentSide_ptr) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::SpiderAgentApp::AgentSide::_PD_repoId))
    return (::SpiderAgentApp::AgentSide_ptr) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for SpiderAgentApp::AgentSide::onDownloadStartup

// Proxy call descriptor class. Mangled signature:
//  void_i_cstring
class _0RL_cd_61f5032497954561_d0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_61f5032497954561_d0000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0_;
  const char* arg_0;
};

void _0RL_cd_61f5032497954561_d0000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_61f5032497954561_d0000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

const char* const _0RL_cd_61f5032497954561_d0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_61f5032497954561_e0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_61f5032497954561_d0000000* tcd = (_0RL_cd_61f5032497954561_d0000000*)cd;
  SpiderAgentApp::_impl_AgentSide* impl = (SpiderAgentApp::_impl_AgentSide*) svnt->_ptrToInterface(SpiderAgentApp::AgentSide::_PD_repoId);
  impl->onDownloadStartup(tcd->arg_0);


}

void SpiderAgentApp::_objref_AgentSide::onDownloadStartup(const char* appId)
{
  _0RL_cd_61f5032497954561_d0000000 _call_desc(_0RL_lcfn_61f5032497954561_e0000000, "onDownloadStartup", 18);
  _call_desc.arg_0 = appId;

  _invoke(_call_desc);



}


//
// Code for SpiderAgentApp::AgentSide::onRenderStartup

// Local call call-back function.
static void
_0RL_lcfn_61f5032497954561_f0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_61f5032497954561_d0000000* tcd = (_0RL_cd_61f5032497954561_d0000000*)cd;
  SpiderAgentApp::_impl_AgentSide* impl = (SpiderAgentApp::_impl_AgentSide*) svnt->_ptrToInterface(SpiderAgentApp::AgentSide::_PD_repoId);
  impl->onRenderStartup(tcd->arg_0);


}

void SpiderAgentApp::_objref_AgentSide::onRenderStartup(const char* appId)
{
  _0RL_cd_61f5032497954561_d0000000 _call_desc(_0RL_lcfn_61f5032497954561_f0000000, "onRenderStartup", 16);
  _call_desc.arg_0 = appId;

  _invoke(_call_desc);



}


//
// Code for SpiderAgentApp::AgentSide::onUploadStartup

// Local call call-back function.
static void
_0RL_lcfn_61f5032497954561_01000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_61f5032497954561_d0000000* tcd = (_0RL_cd_61f5032497954561_d0000000*)cd;
  SpiderAgentApp::_impl_AgentSide* impl = (SpiderAgentApp::_impl_AgentSide*) svnt->_ptrToInterface(SpiderAgentApp::AgentSide::_PD_repoId);
  impl->onUploadStartup(tcd->arg_0);


}

void SpiderAgentApp::_objref_AgentSide::onUploadStartup(const char* appId)
{
  _0RL_cd_61f5032497954561_d0000000 _call_desc(_0RL_lcfn_61f5032497954561_01000000, "onUploadStartup", 16);
  _call_desc.arg_0 = appId;

  _invoke(_call_desc);



}


//
// Code for SpiderAgentApp::AgentSide::getLastSyncTime

// Proxy call descriptor class. Mangled signature:
//  _clonglong_i_clong
class _0RL_cd_61f5032497954561_11000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_61f5032497954561_11000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::LongLong result;
};

void _0RL_cd_61f5032497954561_11000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_61f5032497954561_11000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;

}

void _0RL_cd_61f5032497954561_11000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_61f5032497954561_11000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::LongLong&)result <<= _n;

}

const char* const _0RL_cd_61f5032497954561_11000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_61f5032497954561_21000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_61f5032497954561_11000000* tcd = (_0RL_cd_61f5032497954561_11000000*)cd;
  SpiderAgentApp::_impl_AgentSide* impl = (SpiderAgentApp::_impl_AgentSide*) svnt->_ptrToInterface(SpiderAgentApp::AgentSide::_PD_repoId);
  tcd->result = impl->getLastSyncTime(tcd->arg_0);


}

::CORBA::LongLong SpiderAgentApp::_objref_AgentSide::getLastSyncTime(::CORBA::Long mappingId)
{
  _0RL_cd_61f5032497954561_11000000 _call_desc(_0RL_lcfn_61f5032497954561_21000000, "getLastSyncTime", 16);
  _call_desc.arg_0 = mappingId;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderAgentApp::AgentSide::updateLastSyntime

// Proxy call descriptor class. Mangled signature:
//  void_i_clong_i_clonglong
class _0RL_cd_61f5032497954561_31000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_61f5032497954561_31000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::LongLong arg_1;
};

void _0RL_cd_61f5032497954561_31000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;

}

void _0RL_cd_61f5032497954561_31000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  (::CORBA::LongLong&)arg_1 <<= _n;

}

const char* const _0RL_cd_61f5032497954561_31000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_61f5032497954561_41000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_61f5032497954561_31000000* tcd = (_0RL_cd_61f5032497954561_31000000*)cd;
  SpiderAgentApp::_impl_AgentSide* impl = (SpiderAgentApp::_impl_AgentSide*) svnt->_ptrToInterface(SpiderAgentApp::AgentSide::_PD_repoId);
  impl->updateLastSyntime(tcd->arg_0, tcd->arg_1);


}

void SpiderAgentApp::_objref_AgentSide::updateLastSyntime(::CORBA::Long mappingId, ::CORBA::LongLong lastSyncTime)
{
  _0RL_cd_61f5032497954561_31000000 _call_desc(_0RL_lcfn_61f5032497954561_41000000, "updateLastSyntime", 18);
  _call_desc.arg_0 = mappingId;
  _call_desc.arg_1 = lastSyncTime;

  _invoke(_call_desc);



}


//
// Code for SpiderAgentApp::AgentSide::updateDownloadedVideo

// Proxy call descriptor class. Mangled signature:
//  void_i_cSpiderAgentApp_mAgentSide_mVideoInfo
class _0RL_cd_61f5032497954561_51000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_61f5032497954561_51000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  SpiderAgentApp::AgentSide::VideoInfo_var arg_0_;
  const SpiderAgentApp::AgentSide::VideoInfo* arg_0;
};

void _0RL_cd_61f5032497954561_51000000::marshalArguments(cdrStream& _n)
{
  (const SpiderAgentApp::AgentSide::VideoInfo&) *arg_0 >>= _n;

}

void _0RL_cd_61f5032497954561_51000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new SpiderAgentApp::AgentSide::VideoInfo;
  (SpiderAgentApp::AgentSide::VideoInfo&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();

}

const char* const _0RL_cd_61f5032497954561_51000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_61f5032497954561_61000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_61f5032497954561_51000000* tcd = (_0RL_cd_61f5032497954561_51000000*)cd;
  SpiderAgentApp::_impl_AgentSide* impl = (SpiderAgentApp::_impl_AgentSide*) svnt->_ptrToInterface(SpiderAgentApp::AgentSide::_PD_repoId);
  impl->updateDownloadedVideo(*tcd->arg_0);


}

void SpiderAgentApp::_objref_AgentSide::updateDownloadedVideo(const ::SpiderAgentApp::AgentSide::VideoInfo& vInfo)
{
  _0RL_cd_61f5032497954561_51000000 _call_desc(_0RL_lcfn_61f5032497954561_61000000, "updateDownloadedVideo", 22);
  _call_desc.arg_0 = &(::SpiderAgentApp::AgentSide::VideoInfo&) vInfo;

  _invoke(_call_desc);



}


//
// Code for SpiderAgentApp::AgentSide::updateRenderedVideo

// Proxy call descriptor class. Mangled signature:
//  void_i_clong_i_clong_i_cstring
class _0RL_cd_61f5032497954561_71000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_61f5032497954561_71000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::Long arg_1;
  ::CORBA::String_var arg_2_;
  const char* arg_2;
};

void _0RL_cd_61f5032497954561_71000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;
  _n.marshalString(arg_2,0);

}

void _0RL_cd_61f5032497954561_71000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  (::CORBA::Long&)arg_1 <<= _n;
  arg_2_ = _n.unmarshalString(0);
  arg_2 = arg_2_.in();

}

const char* const _0RL_cd_61f5032497954561_71000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_61f5032497954561_81000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_61f5032497954561_71000000* tcd = (_0RL_cd_61f5032497954561_71000000*)cd;
  SpiderAgentApp::_impl_AgentSide* impl = (SpiderAgentApp::_impl_AgentSide*) svnt->_ptrToInterface(SpiderAgentApp::AgentSide::_PD_repoId);
  impl->updateRenderedVideo(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

void SpiderAgentApp::_objref_AgentSide::updateRenderedVideo(::CORBA::Long jobId, ::CORBA::Long processStatus, const char* vRenderPath)
{
  _0RL_cd_61f5032497954561_71000000 _call_desc(_0RL_lcfn_61f5032497954561_81000000, "updateRenderedVideo", 20);
  _call_desc.arg_0 = jobId;
  _call_desc.arg_1 = processStatus;
  _call_desc.arg_2 = vRenderPath;

  _invoke(_call_desc);



}


//
// Code for SpiderAgentApp::AgentSide::updateUploadedVideo

// Local call call-back function.
static void
_0RL_lcfn_61f5032497954561_91000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_61f5032497954561_71000000* tcd = (_0RL_cd_61f5032497954561_71000000*)cd;
  SpiderAgentApp::_impl_AgentSide* impl = (SpiderAgentApp::_impl_AgentSide*) svnt->_ptrToInterface(SpiderAgentApp::AgentSide::_PD_repoId);
  impl->updateUploadedVideo(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

void SpiderAgentApp::_objref_AgentSide::updateUploadedVideo(::CORBA::Long videoId, ::CORBA::Long processStatus, const char* videoLocation)
{
  _0RL_cd_61f5032497954561_71000000 _call_desc(_0RL_lcfn_61f5032497954561_91000000, "updateUploadedVideo", 20);
  _call_desc.arg_0 = videoId;
  _call_desc.arg_1 = processStatus;
  _call_desc.arg_2 = videoLocation;

  _invoke(_call_desc);



}

SpiderAgentApp::_pof_AgentSide::~_pof_AgentSide() {}


omniObjRef*
SpiderAgentApp::_pof_AgentSide::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::SpiderAgentApp::_objref_AgentSide(ior, id);
}


::CORBA::Boolean
SpiderAgentApp::_pof_AgentSide::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::SpiderAgentApp::AgentSide::_PD_repoId))
    return 1;
  
  return 0;
}

const SpiderAgentApp::_pof_AgentSide _the_pof_SpiderAgentApp_mAgentSide;

SpiderAgentApp::_impl_AgentSide::~_impl_AgentSide() {}


::CORBA::Boolean
SpiderAgentApp::_impl_AgentSide::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "onDownloadStartup")) {

    _0RL_cd_61f5032497954561_d0000000 _call_desc(_0RL_lcfn_61f5032497954561_e0000000, "onDownloadStartup", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "onRenderStartup")) {

    _0RL_cd_61f5032497954561_d0000000 _call_desc(_0RL_lcfn_61f5032497954561_f0000000, "onRenderStartup", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "onUploadStartup")) {

    _0RL_cd_61f5032497954561_d0000000 _call_desc(_0RL_lcfn_61f5032497954561_01000000, "onUploadStartup", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getLastSyncTime")) {

    _0RL_cd_61f5032497954561_11000000 _call_desc(_0RL_lcfn_61f5032497954561_21000000, "getLastSyncTime", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "updateLastSyntime")) {

    _0RL_cd_61f5032497954561_31000000 _call_desc(_0RL_lcfn_61f5032497954561_41000000, "updateLastSyntime", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "updateDownloadedVideo")) {

    _0RL_cd_61f5032497954561_51000000 _call_desc(_0RL_lcfn_61f5032497954561_61000000, "updateDownloadedVideo", 22, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "updateRenderedVideo")) {

    _0RL_cd_61f5032497954561_71000000 _call_desc(_0RL_lcfn_61f5032497954561_81000000, "updateRenderedVideo", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "updateUploadedVideo")) {

    _0RL_cd_61f5032497954561_71000000 _call_desc(_0RL_lcfn_61f5032497954561_91000000, "updateUploadedVideo", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
SpiderAgentApp::_impl_AgentSide::_ptrToInterface(const char* id)
{
  if (id == ::SpiderAgentApp::AgentSide::_PD_repoId)
    return (::SpiderAgentApp::_impl_AgentSide*) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::SpiderAgentApp::AgentSide::_PD_repoId))
    return (::SpiderAgentApp::_impl_AgentSide*) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
SpiderAgentApp::_impl_AgentSide::_mostDerivedRepoId()
{
  return ::SpiderAgentApp::AgentSide::_PD_repoId;
}

POA_SpiderDownloadApp::SpiderFootSide::~SpiderFootSide() {}

POA_SpiderRenderApp::SpiderFootSide::~SpiderFootSide() {}

POA_SpiderUploadApp::SpiderFootSide::~SpiderFootSide() {}

POA_SpiderAgentApp::AgentSide::~AgentSide() {}

